#!../tools/vlua

-- usage : ./vmake <target> [-arch=*|x86_64|arm|arm64|...] [-api=21] [-debug]

dofile('../tools/vmake_base.lua')
dofile('../tools/vmake_android.lua')
dofile('../tools/vmake_android_multi_arch.lua')

local _DEBUG       = vlua.match_arg('^%-debug$')

local CC        = ANDROID_TOOLCHAIN_BIN_PREFIX..'gcc'
local CXX       = ANDROID_TOOLCHAIN_BIN_PREFIX..'g++'
local AR        = ANDROID_TOOLCHAIN_BIN_PREFIX..'ar'
local OUTPATH   = _DEBUG and 'debug' or 'release'
local OBJPATH   = { OUTPATH, 'objs', ANDROID_ARCH }
local CFLAGS    = { ANDROID_CFLAGS
				  , '-Wall', '-Werror'
				  , _DEBUG and '-g' or '-O2'
				  }

local LUA_PATH  = '../3rd/lua-5.3.4/src'

local function make_c2objs(srcs, include_paths, ...)	-- ... is cflags
	if type(srcs)=='string' then srcs = scan_files(srcs, function(f) return f:match('^.+%.c$') end) end
	local flags = args_concat(...)
	local incs = array_convert(include_paths, function(v) return '-I'..v end)
	return make_objs(srcs, OBJPATH, include_paths, function(t) return CC, CFLAGS, flags, incs, '-o', t.obj, '-c', t.src end)
end

local function make_cpp2objs(srcs, include_paths, ...)	-- ... is cflags
	if type(srcs)=='string' then srcs = scan_files(srcs, function(f) return f:match('^.+%.cpp$') end) end
	local flags = args_concat(...)
	local incs = array_convert(include_paths, function(v) return '-I'..v end)
	return make_objs(srcs, OBJPATH, include_paths, function(t) return CXX, CFLAGS, flags, incs, '-o', t.obj, '-c', t.src end)
end

vmake_target_add('clean', function(target)
	local rm = vlua.OS=='windows' and 'rd /S /Q ' or 'rm -rf '
	os.execute(rm .. path_concat('debug', 'objs', ANDROID_ARCH))
	os.execute(rm .. path_concat('debug', 'lib', ANDROID_ARCH))
	os.execute(rm .. path_concat('release', 'objs', ANDROID_ARCH))
	os.execute(rm .. path_concat('release', 'lib', ANDROID_ARCH))
end)

vmake_target_add('lua53', function(target)
	local lua_cflags = '-DLUA_USE_LINUX'
	local srcs = scan_files(LUA_PATH, function(f)
			if f=='lua.c' then return false end
			if f=='luac.c' then return false end
			return f:match('^.+%.c$')~=nil
	end)
	local objs = make_c2objs(srcs, {}, lua_cflags)
	local output = path_concat(OBJPATH, 'lib'..target..'.a')
	return make_target(output, objs, AR, '-rc', output, objs)
end)

vmake_target_add('native_app_glue', function(target)
	local srcs = path_concat(ANDROID_NDK_ROOT, 'sources', 'android', target)
	local objs = make_c2objs(srcs)
	local output = path_concat(OBJPATH, 'lib'..target..'.a')
	return make_target(output, objs, AR, '-rc', output, objs)
end)

vmake_target_add('demo1', function(target)
	local slibs = vmake('native_app_glue')
	local libs = {'-llog', '-landroid'}
	local incs = { ANDROID_NDK_ROOT..'/sources/android/native_app_glue' }
	local objs = make_c2objs(path_concat(target,'src'), incs)
	local output = path_concat(OUTPATH, 'lib', ANDROID_TOOLCHAIN_ABI, 'lib'..target..'.so')
	make_target(output, {objs, slibs}
			, CC, CFLAGS, ANDROID_LINKER_FLAGS
			, '-shared', '-o', output
			, objs, slibs, libs
			)
end)

vmake_target_add('all', function(target)
	vmake('demo1', 'lua53')
end)

